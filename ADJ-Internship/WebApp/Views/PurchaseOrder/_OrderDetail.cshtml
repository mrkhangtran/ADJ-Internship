@model ADJ.BusinessService.Dtos.OrderDTO;

<div uk-grid>
  <div uk-card>
    <button type="button" value="AddItem" name="method" class="uk-button uk-button-primary itemButton">Add Item</button>
  </div>

  <!--paging-->
  <div uk-card>

    @if (Model.PODetails != null)
    {
      @if (Model.PODetails.Items != null)
      {
        //List could be not null but does not have any item
        @if (Model.PODetails.Items.Count > 0)
        {
          int pageSize = ViewBag.PageSize;
          int currentPage = ViewBag.CurrentPage ?? 1;
          int totalPage = Model.PODetails.Items.Count / pageSize;
          @if (Model.PODetails.Items.Count % pageSize > 0) { totalPage++; }

          <ul class="uk-pagination uk-flex-center">
            @if (currentPage > 1)
            {
              <li><a value="Previous" class="itemButton"><span uk-pagination-previous></span></a></li>
            }

            @for (int i = 1; i <= totalPage; i++)
            {
              if (i == currentPage)
              {
                <li class="uk-active"><a value="Page @i" class="itemButton"><span id="currentPage">@i</span></a></li>
              }
              else
              {
                @*<button type="button" value="Page @i" class="uk-button uk-button-secondary itemButton">@i</button>*@
                <li><a value="Page @i" class="itemButton">@i</a></li>
              }
            }

            @if (currentPage < totalPage)
            {
              <li><a value="Next" class="itemButton"><span uk-pagination-next></span></a></li>
            }
          </ul>
        }
      }
    }
  </div>
</div>

<table class="uk-table uk-table-striped uk-table-hover uk-table-small uk-table-middle">

  <!--table header-->
  <tr>
    <th>
      <label asp-for="SingleOrderDetail.ItemNumber"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.Description"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.Tariff"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.Quantity"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.Cartons"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.Cube"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.KGS"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.UnitPrice"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.TotalPrice"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.RetailPrice"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.TotalRetailPrice"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.Warehouse"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.Size"></label>
    </th>
    <th>
      <label asp-for="SingleOrderDetail.Colour"></label>
    </th>
    <th></th>
  </tr>

  <!--only show if user want to add new item-->
  @if (ViewBag.ItemId == -1)
  {
    <tr>
      <td>
        <input asp-for="SingleOrderDetail.Id" type="hidden" class="newItem" />
        <input asp-for="SingleOrderDetail.OrderId" type="hidden" class="newItem" />
        <input asp-for="SingleOrderDetail.RowVersion" type="hidden" class="newItem" />

        <input asp-for="SingleOrderDetail.ItemNumber" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.ItemNumber" class="uk-alert-danger"></span>
        @ViewBag.ItemNumberError
      </td>
      <td>
        <input asp-for="SingleOrderDetail.Description" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.Description" class="uk-alert-danger"></span>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.Tariff" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.Tariff" class="uk-alert-danger"></span>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.Quantity" class="uk-input newItem" id="Quantity" onkeyup="getTotalUnit(); getTotalRetail()" />
        <span asp-validation-for="SingleOrderDetail.Quantity" class="uk-alert-danger"></span>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.Cartons" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.Cartons" class="uk-alert-danger"></span>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.Cube" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.Cube" class="uk-alert-danger"></span>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.KGS" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.KGS" class="uk-alert-danger"></span>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.UnitPrice" class="uk-input newItem" id="UnitPrice" onkeyup="getTotalUnit()" />
        <span asp-validation-for="SingleOrderDetail.UnitPrice" class="uk-alert-danger"></span>
      </td>
      <td>
        <div id="TotalUnit">0</div>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.RetailPrice" class="uk-input newItem" id="RetailPrice" onkeyup="getTotalRetail()" />
        <span asp-validation-for="SingleOrderDetail.RetailPrice" class="uk-alert-danger"></span>
      </td>
      <td>
        <div id="TotalRetail">0</div>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.Warehouse" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.Warehouse" class="uk-alert-danger"></span>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.Size" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.Size" class="uk-alert-danger"></span>
      </td>
      <td>
        <input asp-for="SingleOrderDetail.Colour" class="uk-input newItem" />
        <span asp-validation-for="SingleOrderDetail.Colour" class="uk-alert-danger"></span>
      </td>
      <td>
        <button type="button" value="Save" name="method" class="uk-button uk-button-secondary itemButton">Save Item</button>
      </td>
    </tr>
  }

  <!--show list of item-->
  @if (Model.PODetails != null)
  {
    @if (Model.PODetails.Items != null)
    {


      @if (Model.PODetails.Items.Count > 0)
      {
        int pageSize = ViewBag.PageSize;
        int currentPage = ViewBag.CurrentPage ?? 1;
        int total = Model.PODetails.Items.Count;
        int start = (currentPage - 1) * pageSize;
        int end = currentPage * pageSize;
        if (end > total) { end = total; }
        @for (int i = 0; i < Model.PODetails.Items.Count(); i++)
        //for (int i = start; i < end; i++)
        {
          <input asp-for="PODetails.Items[i].Id" value=@Model.PODetails.Items[i].Id type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].OrderId" value=@Model.PODetails.Items[i].OrderId type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].RowVersion" value=@Model.PODetails.Items[i].RowVersion type="hidden" class="itemProperty" />

          <input asp-for="PODetails.Items[i].ItemNumber" value=@Model.PODetails.Items[i].ItemNumber type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].Description" value=@Model.PODetails.Items[i].Description type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].Tariff" value=@Model.PODetails.Items[i].Tariff type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].Quantity" value=@Model.PODetails.Items[i].Quantity type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].Cartons" value=@Model.PODetails.Items[i].Cartons type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].Cube" value=@Model.PODetails.Items[i].Cube type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].KGS" value=@Model.PODetails.Items[i].KGS type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].UnitPrice" value=@Model.PODetails.Items[i].UnitPrice type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].RetailPrice" value=@Model.PODetails.Items[i].RetailPrice type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].Warehouse" value=@Model.PODetails.Items[i].Warehouse type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].Size" value=@Model.PODetails.Items[i].Size type="hidden" class="itemProperty" />
          <input asp-for="PODetails.Items[i].Colour" value=@Model.PODetails.Items[i].Colour type="hidden" class="itemProperty" />
          @if ((i >= start) && (i < end))
          {
            @if (i != ViewBag.ItemId)
            {
              <!--show each item attribute-->
              <tr>
                <td>
                  @Model.PODetails.Items[i].ItemNumber
                </td>
                <td>
                  @Model.PODetails.Items[i].Description
                </td>
                <td>
                  @Model.PODetails.Items[i].Tariff
                </td>
                <td>
                  @Model.PODetails.Items[i].Quantity
                </td>
                <td>
                  @Model.PODetails.Items[i].Cartons
                </td>
                <td>
                  @Model.PODetails.Items[i].Cube
                </td>
                <td>
                  @Model.PODetails.Items[i].KGS
                </td>
                <td>
                  @Model.PODetails.Items[i].UnitPrice
                </td>
                <td>
                  @Model.PODetails.Items[i].TotalPrice
                </td>
                <td>
                  @Model.PODetails.Items[i].RetailPrice
                </td>
                <td>
                  @Model.PODetails.Items[i].TotalRetailPrice
                </td>
                <td>
                  @Model.PODetails.Items[i].Warehouse
                </td>
                <td>
                  @Model.PODetails.Items[i].Size
                </td>
                <td>
                  @Model.PODetails.Items[i].Colour
                </td>
                <td>
                  <button type="button" value="@i" name="method" class="uk-button uk-button-secondary itemButton">Edit Item</button>
                  <button type="button" value="Delete @i" name="method" class="uk-button uk-button-secondary uk-text-nowrap itemButton">Delete Item</button>
                </td>
              </tr>
            }
            else
            {
              <tr>
                <td>
                  <input asp-for="SingleOrderDetail.Id" value=@Model.PODetails.Items[i].Id type="hidden" class="newItem" />
                  <input asp-for="SingleOrderDetail.OrderId" value=@Model.PODetails.Items[i].OrderId type="hidden" class="newItem" />
                  <input asp-for="SingleOrderDetail.RowVersion" value=@Model.PODetails.Items[i].RowVersion type="hidden" class="newItem" />

                  <input asp-for="SingleOrderDetail.ItemNumber" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.ItemNumber" class="uk-alert-danger"></span>
                  @ViewBag.ItemNumberError
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.Description" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.Description" class="uk-alert-danger"></span>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.Tariff" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.Tariff" class="uk-alert-danger"></span>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.Quantity" class="uk-input newItem" id="Quantity" onkeyup="getTotalUnit(); getTotalRetail()" />
                  <span asp-validation-for="SingleOrderDetail.Quantity" class="uk-alert-danger"></span>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.Cartons" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.Cartons" class="uk-alert-danger"></span>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.Cube" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.Cube" class="uk-alert-danger"></span>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.KGS" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.KGS" class="uk-alert-danger"></span>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.UnitPrice" class="uk-input newItem" id="UnitPrice" onkeyup="getTotalUnit()" />
                  <span asp-validation-for="SingleOrderDetail.UnitPrice" class="uk-alert-danger"></span>
                </td>
                <td>
                  <div id="TotalUnit">0</div>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.RetailPrice" class="uk-input newItem" id="RetailPrice" onkeyup="getTotalRetail()" />
                  <span asp-validation-for="SingleOrderDetail.RetailPrice" class="uk-alert-danger"></span>
                </td>
                <td>
                  <div id="TotalRetail">0</div>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.Warehouse" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.Warehouse" class="uk-alert-danger"></span>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.Size" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.Size" class="uk-alert-danger"></span>
                </td>
                <td>
                  <input asp-for="SingleOrderDetail.Colour" class="uk-input newItem" />
                  <span asp-validation-for="SingleOrderDetail.Colour" class="uk-alert-danger"></span>
                </td>
                <td>
                  <button type="button" value="Update @i" name="method" class="uk-button uk-button-secondary uk-text-nowrap itemButton">Update Item</button>
                </td>
              </tr>
            }
          }
        }
      }
    }
  }
</table>